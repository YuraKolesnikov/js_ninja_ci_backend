stages:
  - test
  - deploy
  - review

default:
  image: node:14.17.0-alpine
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-online

.setup_ssh:
  before_script:
    - 'which ssh-agent || (apk add --update openssh curl bash)'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

lint:
  stage: test
  script:
    - npm i
    - npm run lint
    - npm run check:format
    
deploy:
  extends:
    - .setup_ssh
  stage: deploy
  variables:
    REPOSITORY_URL: 'git@gitlab.com:jurijs.kolesnikovs/js_ninja_cd_backend.git'
    DEPLOY_DST: '/home/deploy/app/$CI_COMMIT_REF_SLUG'
    DB_NAME: $CI_COMMIT_REF_SLUG
  script:
    - npm i -g pm2
    - ssh -q $SSH_USER@$SSH_HOST [[ ! -d "$DEPLOY_DST" ]] && pm2 deploy ecosystem.config.js production setup
    - |
      ssh -q $SSH_USER@$SSH_HOST <<EOF
        echo "DB_NAME=$DB_NAME" > $DEPLOY_DST/.env
        echo "DB_PASSWORD=$DB_PASSWORD" >> $DEPLOY_DST/.env
        echo "DB_USER=$DB_USER" >> $DEPLOY_DST/.env
        echo "SECRET=$SECRET" >> $DEPLOY_DST/.env
      EOF
    - pm2 deploy ecosystem.config.js production --update-env
  environment:
    name: production
    url: http://$CI_COMMIT_REF_SLUG.$APP_HOST/
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'

create_review_app:
  extends:
    - .setup_ssh
  stage: review
  stage: deploy
  variables:
    REPOSITORY_URL: 'git@gitlab.com:jurijs.kolesnikovs/js_ninja_cd_backend.git'
    DEPLOY_DST: '/home/deploy/app/$CI_COMMIT_REF_SLUG'
    DB_NAME: $CI_COMMIT_REF_SLUG
  script:
    - npm i -g pm2
    - ssh -q $SSH_USER@$SSH_HOST [[ ! -d "$DEPLOY_DST" ]] && pm2 deploy ecosystem.config.js production setup
    - |
      ssh -q $SSH_USER@$SSH_HOST <<EOF
        echo "DB_NAME=$DB_NAME" > $DEPLOY_DST/.env
        echo "DB_PASSWORD=$DB_PASSWORD" >> $DEPLOY_DST/.env
        echo "DB_USER=$DB_USER" >> $DEPLOY_DST/.env
        echo "SECRET=$SECRET" >> $DEPLOY_DST/.env
      EOF
    - pm2 deploy ecosystem.config.js production --update-env
    - ssh -q $SSH_USER@$SSH_HOST "$DEPLOY_DST/current/bin/create-db-copy $DB_PASSWORD $DB_NAME"
    - ssh -q $SSH_USER@$SSH_HOST "cd $DEPLOY_DST && nev DB_NAME=$DB_NAME pm2 start ecosystem.config.js --env production --update-env"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_SLUG.$APP_HOST/
    on_stop: stop_review
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

stop_review:
  extends:
    - .setup_ssh
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  variables:
    DEPLOY_DST: '/home/deploy/app/$CI_COMMIT_REF_SLUG'
  script:
    - |
      ssh $SSH_USER@$SSH_HOST <<EOF
        cd $DEPLOY_DST/current
        pm2 delete ecosystem.config.js
      EOF
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual